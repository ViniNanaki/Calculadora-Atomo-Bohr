/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pkg222210361_vinicius_alves_pedro_projeto.view;

import java.awt.Color;
import java.awt.Graphics;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author vinic
 */
public class Animacao extends javax.swing.JFrame {
    Graphics g;
    /**
     * Creates new form Animação
     */
    public Animacao() {
        initComponents();
        g = drawingBoard.getGraphics();
        drawingBoard.paintComponents(g);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        drawingBoard = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        simular = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel9.setText("1");

        jLabel10.setText("2");

        jLabel11.setText("3");

        jLabel12.setText("4");

        jLabel13.setText("5");

        jLabel14.setText("x (nm)");

        drawingBoard.setBackground(new java.awt.Color(0, 0, 0));

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("n = 5");

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("n = 4");

        jLabel5.setBackground(new java.awt.Color(0, 0, 0));
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("n = 3");

        jLabel6.setBackground(new java.awt.Color(0, 0, 0));
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("n = 2");

        jLabel7.setBackground(new java.awt.Color(0, 0, 0));
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("n = 1");

        javax.swing.GroupLayout drawingBoardLayout = new javax.swing.GroupLayout(drawingBoard);
        drawingBoard.setLayout(drawingBoardLayout);
        drawingBoardLayout.setHorizontalGroup(
            drawingBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(drawingBoardLayout.createSequentialGroup()
                .addGroup(drawingBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(0, 287, Short.MAX_VALUE))
        );
        drawingBoardLayout.setVerticalGroup(
            drawingBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(drawingBoardLayout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(100, 100, 100)
                .addComponent(jLabel2)
                .addGap(51, 51, 51)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addContainerGap())
        );

        jLabel4.setText("Simulação Animada");

        jLabel8.setText("0");

        simular.setText("Simular");
        simular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simularActionPerformed(evt);
            }
        });

        jLabel15.setText("E5");

        jLabel19.setText("E4");

        jLabel18.setText("E3");

        jLabel17.setText("E2");

        jLabel16.setText("E1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(simular)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(78, 78, 78)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(43, 43, 43)
                                        .addComponent(jLabel14)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(drawingBoard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(jLabel19)
                            .addComponent(jLabel18)
                            .addComponent(jLabel17)
                            .addComponent(jLabel16))
                        .addGap(0, 85, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(simular))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(100, 100, 100)
                        .addComponent(jLabel19)
                        .addGap(51, 51, 51)
                        .addComponent(jLabel18)
                        .addGap(27, 27, 27)
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel16))
                    .addComponent(drawingBoard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel14)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void simularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simularActionPerformed
        // TODO add your handling code here:

        g.setColor(Color.blue);
        g.drawLine(35, 252, 280, 252);
        g.drawLine(35, 253, 280, 253);
        g.setColor(Color.green);
        g.drawLine(35, 230, 280, 230);
        g.drawLine(35, 231, 280, 231);
        g.setColor(Color.pink);
        g.drawLine(35, 190, 280, 190);
        g.drawLine(35, 191, 280, 191);
        g.setColor(Color.blue);
        g.drawLine(35, 120, 280, 120);
        g.drawLine(35, 121, 280, 121);
        g.setColor(Color.cyan);
        g.drawLine(35, 10, 280, 10);
        g.drawLine(35, 11, 280, 11);

        g.setColor(Color.white);
        g.drawLine(35, 1, 35, 260);
        g.drawLine(35, 260, 280, 260);
        g.drawLine(280, 260, 280, 1);
        g.drawLine(35, 1, 280, 1);

        for (int x = 35; x <= 280; x++) {
            g.setColor(Color.GRAY);
            g.fillOval(x, 385, 10, 10);
            g.setColor(Color.yellow);
            g.fillOval((780 - x), 385, 20, 15);
            try {
                Thread.sleep(5);
                g.setColor(Color.white);
                g.fillOval(x, 385, 10, 10);
                g.fillOval((780 - x), 385, 20, 15);
                g.setColor(Color.red);
                g.drawLine(60, 390, 400, 390); // n1
                g.setColor(Color.black);
                g.drawLine(400, 50, 400, 400);
            } catch (InterruptedException ex) {
                Logger.getLogger(Animacao.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        for (int x = 35; x < 280; x++) {
            if (x <= 390) {
                g.setColor(Color.blue);
                g.fillOval(x, 5, 10, 10);
                try {
                    Thread.sleep(5);
                    g.setColor(Color.black);
                    g.fillOval(x, 5, 10, 10);
                    g.setColor(Color.cyan);
                    g.drawLine(35, 10, 280, 10);
                    g.drawLine(35, 11, 280, 11); // n5
                } catch (InterruptedException ex) {
                    Logger.getLogger(Animacao.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                g.setColor(Color.blue);
                g.fillOval((drawingBoard.getWidth() - x), 5, 10, 10);
                try {
                    Thread.sleep(5);
                    g.setColor(Color.black);
                    g.fillOval((drawingBoard.getWidth() - x), 5, 10, 10);
                    g.setColor(Color.cyan);
                    g.drawLine(35, 10, 280, 10);
                    g.drawLine(35, 11, 280, 11); // n5
                } catch (InterruptedException ex) {
                    Logger.getLogger(Animacao.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }

        for (int x = 280; x <= drawingBoard.getWidth(); x++) {
            g.setColor(Color.yellow);
            g.fillOval(x, 5, 20, 15);
            try {
                Thread.sleep(2);
                g.setColor(Color.black);
                g.fillOval(x, 5, 20, 15);
                g.setColor(Color.cyan);
                g.drawLine(35, 10, 280, 10);
                g.drawLine(35, 11, 280, 11);// n5

            } catch (InterruptedException ex) {
                Logger.getLogger(Animacao.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        //n3----------------------------------
        for (int x = 35; x < 280; x++) {
            if (x <= 380) {
                g.setColor(Color.CYAN);
                g.fillOval(x, 185, 10, 10);
                try {
                    Thread.sleep(9);
                    g.setColor(Color.black);
                    g.fillOval(x, 185, 10, 10);
                    g.setColor(Color.pink);
                    g.drawLine(35, 190, 280, 190);
                    g.drawLine(35, 191, 280, 191); // n3

                } catch (InterruptedException ex) {
                    Logger.getLogger(Animacao.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                g.setColor(Color.black);
                g.fillOval((drawingBoard.getWidth() - x), 185, 10, 10);
                try {
                    Thread.sleep(9);
                    g.setColor(Color.black);
                    g.fillOval((drawingBoard.getWidth() - x), 185, 10, 10);
                    g.setColor(Color.pink);
                    g.drawLine(35, 190, 280, 190);
                    g.drawLine(35, 191, 280, 191); // n3
                } catch (InterruptedException ex) {
                    Logger.getLogger(Animacao.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }

        for (int x = 280; x <= drawingBoard.getWidth(); x++) {
            g.setColor(Color.yellow);
            g.fillOval(x, 185, 20, 15);
            try {
                Thread.sleep(2);
                g.setColor(Color.black);
                g.fillOval(x, 185, 20, 15);
                g.setColor(Color.pink);
                g.drawLine(35, 190, 280, 190);
                g.drawLine(35, 191, 280, 191); // n3
            } catch (InterruptedException ex) {
                Logger.getLogger(Animacao.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        for (int x = 35; x < 280; x++) {
            if (x <= 380) {
                g.setColor(Color.CYAN);
                g.fillOval(x, 225, 10, 10);
                try {
                    Thread.sleep(11);
                    g.setColor(Color.black);
                    g.fillOval(x, 225, 10, 10);
                    g.setColor(Color.green);
                    g.drawLine(35, 230, 280, 230);
                    g.drawLine(35, 231, 280, 231); // n2
                } catch (InterruptedException ex) {
                    Logger.getLogger(Animacao.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                g.setColor(Color.CYAN);
                g.fillOval((drawingBoard.getWidth() - x), 225, 10, 10);
                try {
                    Thread.sleep(11);
                    g.setColor(Color.black);
                    g.fillOval((drawingBoard.getWidth() - x), 225, 10, 10);
                    g.setColor(Color.green);
                    g.drawLine(35, 230, 280, 230);
                    g.drawLine(35, 231, 280, 231); // n2
                } catch (InterruptedException ex) {
                    Logger.getLogger(Animacao.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }

        for (int x = 280; x <= drawingBoard.getWidth(); x++) {
            g.setColor(Color.yellow);
            g.fillOval(x, 225, 20, 15);
            try {
                Thread.sleep(2);
                g.setColor(Color.black);
                g.fillOval(x, 225, 20, 15);
                g.setColor(Color.green);
                g.drawLine(35, 230, 280, 230);
                g.drawLine(35, 231, 280, 231); // n2
            } catch (InterruptedException ex) {
                Logger.getLogger(Animacao.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_simularActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Animacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Animacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Animacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Animacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Animacao().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel drawingBoard;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton simular;
    // End of variables declaration//GEN-END:variables
}
